CREATE TABLE IF NOT EXISTS BUILDING (
    BuildingID SERIAL PRIMARY KEY,
    BuildingName VARCHAR(64) NOT NULL,
    BuildingImageLink VARCHAR(512) NOT NULL
);

CREATE TABLE IF NOT EXISTS LOCATION (
    LocationID SERIAL PRIMARY KEY,
    LocationName VARCHAR(64) NOT NULL,
    BuildingID INT NOT NULL,
    FOREIGN KEY (BuildingID) REFERENCES BUILDING(BuildingID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS REPORT (
    ReportID SERIAL,
    LocationID INT,
    NoiseLevel INT CHECK (NoiseLevel BETWEEN 0 AND 10),
    CrowdLevel INT CHECK (CrowdLevel BETWEEN 0 AND 10),
    Description VARCHAR(256),
    UserID INT, 
    TimeOfReport TIMESTAMP,
    FOREIGN KEY (LocationID) REFERENCES LOCATION(LocationID) ON DELETE CASCADE,
    PRIMARY KEY (ReportID, LocationID)
);

CREATE TABLE IF NOT EXISTS STUDY_GROUP (
    StudyGroupID SERIAL PRIMARY KEY,
    CourseCode VARCHAR(10) NOT NULL,
    PostedAt TIMESTAMP NOT NULL,
    NameOfPoster VARCHAR(32) NOT NULL,
    MajorOfPoster VARCHAR(32) NOT NULL,
    Title VARCHAR(64) NOT NULL,
    Content VARCHAR(256) NOT NULL,
    MeetingDate TIMESTAMP NOT NULL,
    MeetingPlace VARCHAR(64) NOT NULL,
    ParticipantsCurrent INT DEFAULT 1 NOT NULL,
    ParticipantsMax INT NOT NULL,
    Likes INT DEFAULT 0 NOT NULL
);

CREATE TABLE IF NOT EXISTS COMMENT (
    CommentID SERIAL PRIMARY KEY,
    StudyGroupID INT NOT NULL,
    NameOfPoster VARCHAR(32) NOT NULL,
    TimeOfComment TIMESTAMP NOT NULL,
    Content VARCHAR(256) NOT NULL,
    FOREIGN KEY (StudyGroupID) REFERENCES STUDY_GROUP(StudyGroupID) ON DELETE CASCADE
);